var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import PropTypes from 'prop-types';
import { getRotates, getFlips, getSizes } from '../functions/props';
import { AddExactValidator, AddThemeStylesValidator } from '../functions/propTypes';


var FlagIconSizeType = PropTypes.oneOf(getSizes());
var FlagIconRotateType = PropTypes.oneOf(getRotates());
var FlagIconFlipType = PropTypes.oneOf(getFlips());

var makeFlagIconCodeType = function makeFlagIconCodeType(codes) {
  return PropTypes.oneOf(codes);
};

var makeFlagIconClassesObject = function makeFlagIconClassesObject(codes) {
  return {
    code: makeFlagIconCodeType(codes).isRequired,
    size: FlagIconSizeType,
    squared: PropTypes.bool,
    rotate: FlagIconRotateType,
    flip: FlagIconFlipType,
    className: PropTypes.string,
    styleName: PropTypes.string
  };
};

var makeFlagIconPropsTypeObject = function makeFlagIconPropsTypeObject(codes) {
  return _extends({}, makeFlagIconClassesObject(codes), {
    children: PropTypes.element,
    Component: PropTypes.string
  });
};

export var MakeFlagIconPropsType = function MakeFlagIconPropsType(codes) {
  return AddExactValidator(makeFlagIconPropsTypeObject(codes));
};

var flagIconOptionsType = {
  customCodes: PropTypes.object,
  themeStyles: PropTypes.object,
  useCssModules: PropTypes.bool
};

export var MakeFlagIconOptionsPropType = function MakeFlagIconOptionsPropType() {
  return AddExactValidator(AddThemeStylesValidator(flagIconOptionsType));
};